name: Build and test

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-20.04
    container: python:3.10-bullseye
    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          # default postgres user and password
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Install psql
        run: |
          apt-get update
          apt-get install --yes --no-install-recommends postgresql-client
      - name: Create test database and user
        env:
          PGUSER: ${{ secrets.PGUSER }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          PGHOST: ${{ secrets.DB_HOST }}
          PEEP_TEST_DB_NAME: ${{ secrets.DB_NAME }}
          PEEP_USER: ${{ secrets.DB_USER }}
          PEEP_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          psql -h $PGHOST -U $PGUSER -c "CREATE USER $PEEP_USER"
          psql -h $PGHOST -U $PGUSER -c "ALTER USER $PEEP_USER WITH PASSWORD '$PEEP_PASSWORD'"
          psql -h $PGHOST -U $PGUSER -c "CREATE DATABASE $PEEP_TEST_DB_NAME OWNER $PEEP_USER"
          psql -h $PGHOST -U $PGUSER -c "GRANT ALL PRIVILEGES ON DATABASE $PEEP_TEST_DB_NAME TO $PEEP_USER"
          psql -h $PGHOST -U $PGUSER $PEEP_TEST_DB_NAME -c "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\""

      - uses: actions/checkout@v4

      - name: Set up Python
        # This is not the python version, it's the GitHub action version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: 'x64'

      - name: Setup cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install pip and give permissions to the path of cache
        run: |
          chown -R $(whoami) /github/home # Ensure the directory where ~/.cache/pip is located is owned by the current user
          python -m ensurepip --upgrade
          python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt

      - name: Run tests
        env:
          PEEP_ENV: ${{ vars.PEEP_ENV }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: pytest lambdas/tests/